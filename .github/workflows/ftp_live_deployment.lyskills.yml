name: Lyskills Deployment

on:
  push:
    branches:
      - master  # Only trigger when pushing to the 'master' branch

  workflow_dispatch:
    inputs:
      deploy_type:
        description: 'Choose deploy type'
        required: true
        default: 'normal'
        type: choice
        options:
          - docker
          - normal

jobs:
  # test_condition:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Debug deploy_type input
  #       run: echo "Deploy Type: ${{ github.event.inputs.deploy_type }}"

  docker-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deploy_type == 'docker' }}
    strategy:
      fail-fast: true
      matrix:
        php: [8.1]  # You can add more PHP versions in the future if needed
        commit_msg: ["Fixes coding style"]
        container: ["/lyskills-app"]
        app: ["lyskills-app"]
        server_path: [${{ secrets.server_path }}]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@21e092a3e0c2fabb77bf641337eced34a4bcd3cc
        with:
          php-version: ${{ matrix.php }}
          extensions: json, dom, curl, libxml, mbstring, bz2, fileinfo, gd, gettext, mbstring, exif, mysqli, pdo_mysql
          tools: pint:1.16.1, phpdoc, composer:2.4.4
          coverage: none

      - name: Run Pint for code styling
        run: pint --config pint.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}${{ matrix.container }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}${{ matrix.container }}:latest

      - name: SSH to server and deploy Docker image
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SSH_USERNAME }}
          host: ${{ secrets.SERVER_IP }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            # Log into Docker Hub on the remote server
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # Pull the latest image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}${{ matrix.container }}:latest

            # Stop and remove the existing container
            docker stop ${{ matrix.app }} || true
            docker rm ${{ matrix.app }} || true

            # Run the new container with the latest image
            docker run -d --name ${{ matrix.app }} -p 80:80 ${{ secrets.DOCKER_USERNAME }}${{ matrix.container }}:latest

      - name: Build and start Docker containers
        run: |
          docker-compose -f docker-compose.yml up -d --build

      - name: Stop Docker containers
        run: |
          docker-compose down

  laravel-deployment:
    runs-on: ubuntu-latest
    timeout-minutes: 1200
    strategy:
      fail-fast: true
      matrix:
        php: [8.1]  # You can add more PHP versions in the future if needed
        commit_msg: ["Fixes coding style"]
        server_path: [${{ secrets.server_path }}]

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@21e092a3e0c2fabb77bf641337eced34a4bcd3cc
        with:
          php-version: ${{ matrix.php }}
          extensions: json, dom, curl, libxml, mbstring, bz2, fileinfo, gd, gettext, mbstring, exif, mysqli, pdo_mysql
          tools: pint:1.16.1, phpdoc, composer:2.4.4
          coverage: none

      - name: Run Pint for code styling
        run: pint --config pint.json

      - name: Sync files to server via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASS }}
          server-dir: /
          log-level: verbose
          timeout: 60000000
          port: 21
          # passive: true  # Use passive mode to avoid unexpected disconnects
          protocol: ftps
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/vendor/**

      - name: Run server-side deployment script
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SSH_USERNAME }}
          host: ${{ secrets.SERVER_IP }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ matrix.server_path }} &&
            sudo chmod -R 775 ${{ matrix.server_path }}/server_deploy.sh &&
            sudo chown -R ${{ matrix.server_path }}/server_deploy.sh &&
            ./server_deploy.sh

